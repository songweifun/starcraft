<?php
/**
 * 所有抛出的异常会在此类的此方法中被捕获处理
 * Created by PhpStorm.
 * User: daivd
 * Date: 2017/7/20
 * Time: 下午7:53
 */

namespace app\lib\exception;


use Exception;//这个必须为基类exception
use think\Config;
use think\exception\Handle;
use think\Log;
use think\Request;

class ExceptionHandler extends Handle
{

    private $code;
    private $msg;
    private $errorCode;
    //还有一个当前的url
    public function render(Exception $e)
    {

        //return parent::render($e); // TODO: Change the autogenerated stub
        if($e instanceof BaseException){
            //自定义的异常处理
            //由用户行为导致的异常 需要返回具体信息
            $this->code=$e->code;
            $this->msg=$e->msg;

            $this->errorCode=$e->errorCode;




        }else{
            //Config::get('app_debug');
            if(config('app_debug')){
                return parent::render($e);

            }else{
                //由服务器导致的异常 不需要返回具体信息
                $this->code=500;
                $this->msg='服务器内部错误，可我不想告诉你!';
                $this->errorCode=999;

                $this->recordErrorLog($e);
            }


        }

        $request=Request::instance();
        $result=[
            'msg'=> $this->msg,
            'errorCode'=>$this->errorCode,
            'url'=>$request->url(),//当前的请求地址
        ];

        //print_r($result);
        return json($result,$this->code);//返回给客户端
    }


    public function recordErrorLog(Exception $e){
        Log::init([
            'type'=>'File',
            'path'=>LOG_PATH,
            'level'=>['error']
            //在使用log::record记录时低于error的将不会被记录


        ]);

        Log::record($e->getMessage(),'error');
    }

}